commands 
./waf --run filename
./NetAnim
gnuplot filename.plt
wireshark filename.pcap


#include "ns3/mobility-module.h"
#include "ns3/netanim-module.h"

MobilityHelper mobility;
mobility.SetMobilityModel("ns3::ConstantPositionMobilityModel");
mobility.Install(nodes);

AnimationInterface anim("first-exam.xml");
AnimationInterface::SetConstantPosition(nodes.Get(0),10,25);
AnimationInterface::SetConstantPosition(nodes.Get(1),60,25);
anim.EnablePacketMetadata(true);
pointToPoint.EnablePcapAll("first-exam");
  
/// plt file  
set terminal png
set output "filename.png"
set title "P-2-P Graph"
set xlabel "Nodes"
set ylabel "Time Delay"
plot "packet_file_name.txt" using 1:3 with linespoint title "Delay Time" lw 4

/**************************
commandline input
bool useV6 = false;
Address serverAddress;
uint32_t node = 2;

CommandLine cmd;
cmd.AddValue("node", "Number of nodes", node);
cmd.AddValue ("useIpv6", "Use Ipv6", useV6);
cmd.Parse (argc, argv);
*****************************/

WIRESHARK ANALYSIS
 https://www.cs.toronto.edu/~ahchinaei/teaching/2016jan/csc358/
 
 Wireshark DHCP : https://maxwellsullivan.wordpress.com/2013/04/07/wireshark-lab-9-dhcp/
 Purpose of transactionID: The transaction ID is different so that the host can differentiate between different requests made by the user.
 
 Link layer address == Ethernet Address
 
 INSTALLATION
  
NETANIM
# Go to NS3 All-in-one folder and go further into NetAnim folder cd ns-allinone-3.30.1/netanim-3.108/ 
# 
sudo apt-get install make -y 
# clean the source code, 
qmake and then 
make 
make clean 
qmake NetAnim.pro make 
Now, NetAnim is ready to use. 


NS3 INSTALLATION
sudo apt update

sudo apt install g++ python3 python3-dev pkg-config sqlite3 cmake python3-setuptools git qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools gir1.2-goocanvas-2.0 python3-gi python3-gi-cairo python3-pygraphviz gir1.2-gtk-3.0 ipython3 openmpi-bin openmpi-common openmpi-doc libopenmpi-dev autoconf cvs bzr unrar gsl-bin libgsl-dev libgslcblas0 wireshark tcpdump sqlite sqlite3 libsqlite3-dev  libxml2 libxml2-dev libc6-dev libc6-dev-i386 libclang-dev llvm-dev automake python3-pip libxml2 libxml2-dev libboost-all-dev 

tar jxvf ns-allinone-3.36.1.tar.bz2 
OR
tar xjf ns-allinone-3.32.tar.bz2 

./waf clean 
./build.py 
./waf configure --enable-examples --enable-tests
./waf --run hello-simulator